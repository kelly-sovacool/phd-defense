---
title: "Improving machine learning models for microbiome analysis"
subtitle: "and democratizing data science along the way"
author: "Kelly Sovacool"
date: 2023-06-22
date-format: MMM DD, YYYY
mainfont: Helvetica
format:
  revealjs:
    theme: custom.scss
    embed-resources: false
    logo: img/block_m-hex.png
execute:
  eval: true
  echo: false
knitr:
  opts_chunk:
    fig.path: figures/
---

```{r deps}
library(cowplot)
library(ggsankey)
library(glue)
library(knitr)
library(schtools)
library(tidyverse)
library(yaml)

metadat_cases <- read_csv('papers/severe-cdi/data/process/cases_full_metadata.csv') %>%
    filter(!(is.na(idsa) & is.na(allcause) & is.na(attrib) & is.na(pragmatic)))
perf_dat <- read_csv('papers/severe-cdi/results/performance_results_aggregated.csv') %>%
    rename(AUROC = AUC,
           AUPRC = prAUC)  %>%
  mutate(
    outcome = factor(case_when(outcome == 'idsa' ~ 'IDSA\n severity',
                        outcome == 'attrib' ~ 'Attributable\n severity',
                        outcome == 'allcause' ~ 'All-cause\n severity',
                        outcome == 'pragmatic' ~ 'Pragmatic\n severity',
                        TRUE ~ NA_character_), levels = c('IDSA\n severity',
                           'All-cause\n severity',
                           'Attributable\n severity',
                           'Pragmatic\n severity'))
  )
feat_dat <- read_csv('papers/severe-cdi/results/feature-importance_results_aggregated.csv')
sensspec_dat <- read_csv('papers/severe-cdi/results/sensspec_results_aggregated.csv')
```

## What is a microbiome?

Community of microorganisms that inhabit a shared ecosystem

## The human gut microbiome changes during diseases

:::{.smaller}
- Irritable bowel diseases
- Colorectal cancer
- _Clostridioides difficile_ infection
:::

:::{.notes}
- Changes in the taxonomic composition and metabolic activity of human microbiomes have been observed in several diseases including colorectal cancer (CRC) and Clostridioides difficile infection (CDI).
- **CRC** - enrichment for bacteria that produce enterotoxins in CRC gut microbiomes.
- **CDI** - treatment with antibiotics alters the taxonomic composition of the gut microbiome, allowing _C. diff_ to colonize the gut.

- For depictions of gut microbiome:
    - https://norgenbiotek.com/blog/gut-microbiome-and-its-effects-human-health
    - https://commonfund.nih.gov/sites/default/files/Vector%20intestines%20with%20bacteria%2C%20germs%20and%20magnifier%20-467885302.jpg
    - https://medicalxpress.com/news/2019-10-commonly-drugs-profoundly-affecting-gut.html
- ML models have the potential to improve the early detection of CRC, inform clinicians on which CDI patients may be most at risk of experiencing a severe case, or more generally contribute to our understanding of how the gut microbiome changes during disease states.
:::

## The human gut microbiome changes during _C. difficile_ infection

![](img/cdiff-infection.png)

:::{.aside}
Created with [BioRender](biorender.com){fig-align="center"}
:::

:::{.notes}
- Changes in the taxonomic composition and metabolic activity of human microbiomes have been observed in several diseases including colorectal cancer (CRC) and Clostridioides difficile infection (CDI).
- **CRC** - enrichment for bacteria that produce enterotoxins in CRC gut microbiomes.
- **CDI** - treatment with antibiotics alters the taxonomic composition of the gut microbiome, allowing _C. diff_ to colonize the gut.

- For depictions of gut microbiome:
    - https://norgenbiotek.com/blog/gut-microbiome-and-its-effects-human-health
    - https://commonfund.nih.gov/sites/default/files/Vector%20intestines%20with%20bacteria%2C%20germs%20and%20magnifier%20-467885302.jpg
    - https://medicalxpress.com/news/2019-10-commonly-drugs-profoundly-affecting-gut.html
- ML models have the potential to improve the early detection of CRC, inform clinicians on which CDI patients may be most at risk of experiencing a severe case, or more generally contribute to our understanding of how the gut microbiome changes during disease states.
:::

## How to study the gut microbiome

![](img/microbiome-research.png){height=600px fig-align="center"}

:::{.aside}
Created with [BioRender](biorender.com)
:::

:::{.notes}
and do it all reproducibly
:::

## Machine learning for health care

diagnosis and prognosis


## Overview

:::{.column width="72%"}
1. Improve methods for processing microbiome data.
1. Predict severe _C. difficile_ infections from gut microbiome composition.
1. Contribute to democratizing data science.
:::

## How to characterize microbiomes

![](img/amplicon-vs-metagenomics.png){height=600px fig-align="center"}

:::{.aside}
Lee (2019). [JOSE](https://astrobiomike.github.io/misc/amplicon_and_metagen)
:::

:::{.notes}
pros & cons of amplicon sequencing vs metagenomics

fundamentally different questions
:::

## Difficulties in bacterial taxonomy

there is no consensus definition of a bacterial species

amplicon sequences do not contain enough information to identify at the species level

## Clustering OTUs

make nice diagrams to explain otu clustering

## optifit conclusions / follow-up study

## _C. difficile_ infection (CDI)

![](img/Cdiff-Factsheet-P_impact-risk.png){height=500px}

:::{.aside}
[cdc.gov/cdiff](https://www.cdc.gov/cdiff/)
:::

## Clinical data for predicting complicated CDI

:::{.column width="60%"}
![](img/li_ehr_auroc.jpeg)

::::{.smaller-text}
median AUROC: **0.69**
::::
:::

:::{.column width="35%" .smaller-text}
<br>
TODO summarize dieterle & rao papers too
- Electronic health record (EHR) data used as features to predict whether disease-related complications occurred.
- Motivation: inform clinicians on which CDI patients may be most at risk of severe CDI.
:::

:::{.aside}
Li _et al._ (2019). [OFID](https://doi.org/10.1093/ofid/ofz186)
:::

:::{.notes}
Papers by Vince, Jenna, & Krishna looking at EHR data to predict CDI complications.

CDI treatment. Li et al. (2019). https://academic.oup.com/ofid/article/6/5/ofz186/5475497
"The development and validation of EHR-based risk stratification models for predicting complicated CDI could eventually help clinicians tailor treatments to individuals. On the day of CDI diagnosis, a patient’s estimated risk for complications could serve as an adjunct, easily obtainable resource for clinical decision support. Treatment decisions such as whether to use high-dose vancomycin or perform a loop ileostomy with antegrade vancomycin infusions [23] often do not occur until complicated CDI has already set in. In severe cases, early aggressive therapy can positively impact the course. However, invasive treatments such as enemas (fecal microbiota transplantation or vancomycin) and surgery are optimally used in only select patients, and such decisions lack the rigorous guidelines associated with initial treatment."

Would help clinicians tailor treatment options early on. Whether to go with an aggressive treatment plan or not.
:::

## Models to predict severity

## {}

<br>

:::{.big-middle}
Can we use the composition of the gut microbiome to predict CDI severity?
:::

## How to define CDI severity {.smaller}

<br>

![](papers/severe-cdi/figures/severity_flowchart.png){height=600px}

:::{.absolute width="35%" top=70 left=180 .narrow-frame .fragment}
`r format_number(nrow(metadat_cases))` CDI patient stool samples collected on the day of diagnosis
:::

:::{.fragment .filled-box .absolute top=300 left=850}
```{r sample_counts}
counts <- read_csv('papers/severe-cdi/results/count_table_full.csv') %>%
  mutate(Severity = factor(Severity, levels = c('IDSA', 'All-cause', 'Attributable', 'Pragmatic')))
counts %>%
    filter(Severity != 'Pragmatic') %>%
    kable(format.args = list(big.mark = ',')) %>%
    kableExtra::kable_styling(font_size = 20)
```
:::

:::{.fragment .filled-box .absolute top=300 left=850}
```{r sample_counts_pragmatic}
counts %>%
    kable(format.args = list(big.mark = ',')) %>%
    kableExtra::kable_styling(font_size = 20)
```
:::

## Training machine learning models

![](img/topcuoglu_framework.jpeg){height=600px}

:::{.aside}
Topçuoğlu _et al._ (2020). [mBio](https://doi.org/10.1128/mBio.00434-20)
:::

## Model performance {.smaller}
Random Forests trained on 100x train/test splits of each dataset

```{r roc_curves}
#| out-width: 100%
roc_dat <- read_csv('papers/severe-cdi/results/roccurve_results_aggregated.csv') %>%
  mutate(outcome = factor(outcome, levels = c('idsa', 'allcause', 'attrib', 'pragmatic'))) %>% 
  mutate(dataset = case_when(dataset == 'full' ~ 'Full datasets',
                             dataset == 'int' ~ 'Intersection',
                             TRUE ~ NA_character_)) %>% 
  dplyr::mutate(specificity = round(specificity, 1)) %>%
  dplyr::group_by(specificity, dataset, outcome) %>%
  dplyr::summarise(
    mean_sensitivity = mean(sensitivity),
    upper = quantile(sensitivity, 0.95),
    lower = quantile(sensitivity, 0.05)
  ) %>%
  dplyr::mutate(
    upper = dplyr::case_when(
      upper > 1 ~ 1,
      TRUE ~ upper
    ),
    lower = dplyr::case_when(
      lower < 0 ~ 0,
      TRUE ~ lower
    )
  )

roc_plot <- roc_dat %>%
  filter(dataset != 'Intersection')  %>%
  ggplot() +
  geom_ribbon(aes(x = specificity, ymin = lower, ymax = upper, fill = outcome), 
              alpha = 0.08) +
  geom_line(aes(x = specificity, y = mean_sensitivity, color = outcome), alpha=0.6) +
  #geom_point(data = roc_risk_pct, aes(x = Specificity, y = mean_sensitivity, color = outcome)) +
  geom_abline(
    intercept = 1,
    slope = 1,
    linetype = "dashed",
    color = "grey50"
  ) +
  scale_color_manual(values = c(idsa = "#1B9E77", 
                                attrib = "#D95F02", 
                                allcause = "#7570B3", 
                                pragmatic = "#E7298A"),
                     guide = guide_legend(label.position = 'top')) +
  scale_fill_manual(values = c(idsa = "#1B9E77", 
                               attrib = "#D95F02", 
                               allcause = "#7570B3", 
                               pragmatic = "#E7298A"),
                    labels = c(idsa='IDSA', attrib='Attributable', 
                               allcause='All-cause', pragmatic='Pragmatic')
  ) +
  guides(fill = 'none') +
  scale_y_continuous(expand = c(0, 0), limits = c(-0.01, 1.01)) +
  scale_x_reverse(expand = c(0, 0), limits = c(1.01,-0.01)) +
  coord_equal() +
  labs(x = "Specificity", y = "Sensitivity") +
  theme_sovacool() +
  theme(text = element_text(size = 10, family = 'Helvetica'),
        legend.position = 'top',
        legend.title = element_blank(),
        strip.background = element_blank(),
        panel.spacing = unit(10, 'pt'),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        plot.margin = margin(0,5,0,0))

auroc_plot <- perf_dat %>%
    filter(dataset == 'full') %>%
    rename(trainset = cv_metric_AUC,
           testset = AUROC) %>%
    pivot_longer(c(trainset, testset),
                 names_to = "data_partition",
                 values_to = 'AUROC'
                 )  %>%
    ggplot(aes(x = AUROC, y = outcome, color = data_partition)) +
    geom_vline(xintercept = 0.5, linetype = "dashed") +
    geom_boxplot() +
    stat_summary(fun = median,
                 geom = "text",
                 show.legend = FALSE,
                 mapping = aes(label = round(after_stat(x),2)),
                 position = position_nudge(x = 0.2, y = c(-0.1, 0.1))) +
    scale_color_grey() +
    scale_x_continuous(expand = c(0, 0), limits = c(0.3, 1.01)) +
    theme_sovacool() +
    theme(
        plot.margin = unit(x = c(0, 5, 0, 10), units = "pt"),
        axis.title.y = element_blank(),
        legend.position = 'top',
        legend.margin = margin(0, 0, 0, 0, unit = "pt"),
        legend.title = element_blank(),
        text = element_text(size = 14)
    )
plot_grid(roc_plot, NULL, nrow = 1, rel_widths = c(0.8,1),
          align = 'h', axis = 'tb')
```

## Model performance {.smaller}
Random Forests trained on 100x train/test splits of each dataset

```{r auroc}
plot_grid(roc_plot, auroc_plot, nrow = 1, rel_widths = c(0.8,1),
          align = 'h', axis = 'tb')
```


:::{.absolute top=20 right=100 width="250" height="80" .medium-text .frame-box .fragment}
EHR-based models from Li _et al._

Median AUROC: **0.69**
:::

## perf vs ehr


:::{.absolute right=0 bottom=0 .filled-box .fragment}
```{r counts_vertical}
counts %>%
    kable(format.args = list(big.mark = ','),
          col.names = c(' ', 'n', '%pos.')) %>%
    kableExtra::kable_styling(font_size = 20)
```
:::

:::{.aside}
:::


## Permutation feature importance

## Balanced Precision

```{r aubprc_box}
aubprc_box <- perf_dat %>%
    ggplot(aes(x = aubprc, y = outcome)) +
    geom_vline(xintercept = 0.5, linetype = "dashed") +
    geom_boxplot() +
    stat_summary(fun = median,
                 geom = "text",
                 show.legend = FALSE,
                 mapping = aes(label = round(after_stat(x),2)),
                 position = position_nudge(x = 0.04, y = 0.1)) +
    facet_wrap('dataset', ncol = 2) +
    labs(x = 'AUBPRC') +
    xlim(0.5, 1) +
    theme_bw() +
    theme(
        plot.margin = unit(x = c(0, 0, 0, 0), units = "pt"),
        axis.title.y = element_blank(),
        legend.position = 'top',
        legend.margin = margin(0, 0, 0, 0, unit = "pt"),
        legend.title = element_blank(),
        text = element_text(size = 14)
    )
aubprc_box
```

:::{.aside}
Performance on the test set for Random Forest models trained on 100x train/test splits of each dataset
:::

## Clinical value of severity prediction models

## Conclusions

. . .

### Future work


## Democratizing reproducible data science

- Make data science tools more accessible to researchers from non-computational backgrounds.
- Disseminate user-friendly tools & curricula with OSI-approved licenses.
- Promote diversity, equity, and inclusion in data science.

gwc, swc, mikropml

## Intro to Python for Data Science

Girls Who Code

## Coding for Reproducible Research

Software Carpentry

## Reproducible ML pipelines with mikropml

`meek-rope em el`

:::{.column width="75%"}
![](img/mikropml-pipeline.png)
:::

:::{.column width="20%"}
![](img/mikropml-snakemake.png){height=400px}
:::

:::{.aside}
[Topçuoğlu^\*^, Lapp^\*^, Sovacool^\*^ _et al._ (2021). JOSS](https://doi.org/10.21105/joss.03073)
:::

## mikropml impact

![](img/plot-downloads-time-1.png)

## Summary

## Acknowledgements

TODO

## post-PhD plans

Bioinformatics Software Engineer for Frederick National Lab (NIH/NCI)

## Congratulations! &nbsp; 🎉

:::{.big-center}
_You've unlocked the backup slides_
:::

## 5-fold cross validation

![](img/grid_search_cross_validation.png){height=500px}

::: {.aside}
sklearn docs: <https://scikit-learn.org/stable/modules/cross_validation.html>
:::

## Decision trees

![](img/decision-trees.png)

## Random forest

![](img/random-forest.png)

## Precision-Recall without balancing

## Limitation: class imbalance

- Imbalanced classes with many negatives can inflate the ROC (sensitivity vs 1-specificity).
- The baseline PRC (precision vs recall) depends on the frequency of positives, but the severity definitions each have different frequencies of positives.

:::{.absolute right=2 bottom=5 width="45%"}
![](img/wiki-conf-mat.png)
:::

:::{.absolute left=2 bottom=200 width="52%" .filled-box}
```{r positives}
counts %>%
    kable(format.args = list(big.mark = ',')) %>%
    kableExtra::kable_styling(font_size = 22)
```
:::

:::{.notes}
precision: out of samples predicted to be positive, how many are correct

recall: out of positively labelled samples, how many are predicted positive
:::

## Solution: calculate the balanced precision

Introduced by
[Wu _et al._ (2021). AJHG.](https://doi.org/10.1016/j.ajhg.2021.08.012) Improved pathogenicity prediction for rare human missense variants.

<br>

#### Equation 7

$$
AUBPRC = \frac{AUPRC \times (1 - prior)}
{AUPRC \times (1 - prior) + (1 - AUPRC) \times prior}
$$

:::{.aside}
_prior_ = frequency of positives

_AUBPRC_ = area under the **balanced precision**-recall curve
:::

:::{.notes}
https://en.wikipedia.org/wiki/Bayes%27_theorem
:::

## A more fair comparison? {.smaller}

```{r auroc_facet}
auroc_facet_plot <- perf_dat %>%
    rename(trainset = cv_metric_AUC,
           testset = AUROC) %>%
    pivot_longer(c(trainset, testset),
                 names_to = "data_partition",
                 values_to = 'AUROC'
                 )  %>%
    ggplot(aes(x = AUROC, y = outcome, color = data_partition)) +
    geom_vline(xintercept = 0.5, linetype = "dashed") +
    geom_boxplot() +
    stat_summary(fun = median,
                 geom = "text",
                 show.legend = FALSE,
                 mapping = aes(label = round(after_stat(x),2)),
                 position = position_nudge(x = 0.2, y = c(-0.1, 0.1))) +
    facet_wrap('dataset', ncol = 2) +
    scale_color_grey() +
    xlim(0.3,1) +
    theme_bw() +
    theme(
        plot.margin = unit(x = c(0, 0, 0, 0), units = "pt"),
        axis.title.y = element_blank(),
        legend.position = 'top',
        legend.margin = margin(0, 0, 0, 0, unit = "pt"),
        legend.title = element_blank(),
        text = element_text(size = 14)
    )

auroc_facet_plot
```

```{r int}
ncases_int <- read_csv('papers/severe-cdi/data/process/cases_int_metadata.csv') %>% nrow()
```


:::{.absolute bottom=5 left=100 width="40%" .color-ash}
**full** - all samples available; different number of samples between outcomes.
:::

:::{.absolute bottom=5 right=50 width="40%" .color-ash}
**int** - intersection, i.e. only samples that have all three outcome labels (n=`r ncases_int`).
:::
